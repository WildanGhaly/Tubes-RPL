# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'testQuotesI1.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QFont
import Quotes.Quotes_Service as QS
import tkinter as tk
from tkinter import messagebox
from PyQt5.QtCore import QRect, QPropertyAnimation
import MainMenu.mainmenu as main

class QInput(QS.Quotes_Service):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1366, 720)
        MainWindow.setMinimumSize(QtCore.QSize(1366, 720))
        MainWindow.setMaximumSize(QtCore.QSize(1366, 720))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 1366, 720))
        self.label.setMinimumSize(QtCore.QSize(1366, 720))
        self.label.setMaximumSize(QtCore.QSize(1366, 720))
        # self.label.setStyleSheet("background-image: url(./Quotes/background.jpg)")
        self.label.setStyleSheet(f"background-image: url({main.image_path});\n"
"border-image: url(./Quotes/image/quotes input fg black.png);")
        
        # self.label.setStyleSheet("border-image: url(:/newPrefix/quotes input fg b.png);")
        # self.label.setStyleSheet("background-image: url(:/newPrefix/quotes input fg.png);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(1080, 570, 141, 51))
        self.pushButton.setMaximumSize(QtCore.QSize(141, 51))
        self.pushButton.setStyleSheet("border-radius: 50px;\n"
" padding: 0; width: 100px; \n"
"height: 100px;  ")
        self.pushButton.setText("")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.add_quote_submit)

        self.input = QtWidgets.QTextEdit(self.centralwidget)
        self.input.setGeometry(QtCore.QRect(132, 266, 1101, 271))
        self.input.setObjectName("InputQuotes")
        font = QFont("Arial", 18)
        self.input.setFont(font)

        self.backButton = QtWidgets.QPushButton(self.centralwidget)
        self.backButton.setObjectName(u"backButton")
        self.backButton.setGeometry(QRect(25, 25, 88, 86))
        self.backButton.setStyleSheet("QPushButton{background: transparent;}")
        self.backButton.clicked.connect(self.back)


        # MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1366, 21))
        self.menubar.setObjectName("menubar")
        # MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        # MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

    def add_quote_submit(self):
            # call add_quote function from backend and show success message if it returns true
            if self.add_quote(self.input.toPlainText()):
                messagebox.showinfo("Success", "Quote berhasil ditambahkan.")
                self.input.setText("")
                from MainMenu.main_menu_GUI import Main_Menu_GUI
                self.main_menu = Main_Menu_GUI()
                self.main_menu.show()
                self.hide()

    def back(self):
        from Quotes.Choose_Call import Quotes_Choose_Call
        self.main_menu = Quotes_Choose_Call()
        self.main_menu.show()
        self.hide()

import Quotes.rc_input
# import QI_rc

# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     MainWindow = QtWidgets.QMainWindow()
#     ui = QInput()
#     ui.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec_())
